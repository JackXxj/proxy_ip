项目总结：（mimvp_proxy_write_redis.py）
	1、代理ip写入redis项目：首先代理ip写入redis中是每一分钟调度一次（所以在该项目中，不需要实现获取代理IP失效的重试机制，因为当失败之后下一分钟又重新调度了；如果写了重试机制，当获取失败之后，该脚本就会一直重试，当运行脚本数量达到一定数量之后就会导致获取代理ip接口一直失败，就会一直堆积该脚本，导致服务器宕机。）
	2、因为有多个项目会使用到同一套代理ip，所以针对每一个项目设置一个代理ip队列用来存储代理ip。（存储到redis中）


项目优化：（kuai_proxy_write_redis.py）
	当后期项目越来越多，那么每添加一个需要使用代理的项目，就需要在代理写入redis的项目文件中添加一个方法。（显得很麻烦，也不合理）
    解决方法：就是将代理放入到一个redis的key中(set类型), 这样每个项目从该key中读取(smembers)即可   【1、前面的方法有的是list中的lpop方法，所以就需要针对每个项目设置一个key；2、当然也可以使用list中lrange方法，但是需要设置start和end，没有set的smembers方便】。


对于具体的爬虫脚本文件获取redis中的代理ip， 如果获取到代理ip为0或获取代理ip异常时，就应该捕获异常，然后一直重试获取redis中的代理ip。直到获取到代理ip。